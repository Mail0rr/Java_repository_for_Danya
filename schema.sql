CREATE TABLE IF NOT EXISTS users (
      user_id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
      username TEXT NOT NULL UNIQUE,
      gmail TEXT NOT NULL UNIQUE,
      password TEXT NOT NULL,
      email_verified BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS profile (
      profile_id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
      user_id INTEGER NOT NULL UNIQUE,
      photo TEXT,
      description TEXT,
      FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS feedback (
      feedback_id INTEGER PRIMARY KEY AUTOINCREMENT,
      user_id INTEGER NOT NULL,
      text TEXT NOT NULL,
      rating INTEGER NOT NULL,
      FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS java (
      java_id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
      necessity TEXT NOT NULL,
      main_topic TEXT NOT NULL,
      sub_topic TEXT NOT NULL,
      complete BOOLEAN DEFAULT FALSE,
      UNIQUE(main_topic, sub_topic)
);

CREATE TABLE IF NOT EXISTS badge (
      bage_id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
      name TEXT NOT NULL UNIQUE,
      description TEXT NOT NULL,
      image TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS user_badge (
      user_id INTEGER NOT NULL,
      badge_id INTEGER NOT NULL,
      PRIMARY KEY (user_id, badge_id),
      FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
      FOREIGN KEY (badge_id) REFERENCES badge (badge_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_java (
      user_id INTEGER NOT NULL,
      java_id INTEGER NOT NULL,
      complete BOOLEAN DEFAULT FALSE,
      PRIMARY KEY (user_id, java_id),
      FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
      FOREIGN KEY (java_id) REFERENCES java (java_id) ON DELETE CASCADE
);

INSERT OR IGNORE INTO java (necessity, main_topic, sub_topic) VALUES
('Need', 'Java Basics Extended', 'Type Casting'),
('Need', 'Java Basics Extended', 'Arrays Extended'),
('Need', 'Java Basics Extended', 'Switch Case'),
('Need', 'Java Basics Extended', 'Classes'),
('Need', 'Java Basics Extended', 'Classes Advanced'),
('Need', 'Java Basics Extended', 'Methods Advanced'),
('Need', 'Java Basics Extended', 'Practice'),
('Need', 'Java Core', 'How to Solve Tasks'),
('Need', 'Java Core', 'Memory, Wrappers, String'),
('Need', 'Java Core', 'Bit Manipulation'),
('Need', 'Java Core', 'OOP'),
('Need', 'Java Core', 'Abstract Class vs. Interface'),
('Need', 'Java Core', 'Exception'),
('Need', 'Java Core', 'Files'),
('Need', 'Java Core', 'Equals, Hashcode, and Clone'),
('Need', 'Java Core', 'Patterns and Recursion'),
('Need', 'Java Core', 'Generics'),
('Need', 'Java Core', 'ArrayList'),
('Need', 'Java Core', 'LinkedList'),
('Need', 'Java Core', 'PECS'),
('Need', 'Java Core', 'HashMap'),
('Need', 'Java Core', 'Array Practice'),
('Need', 'Java Core', 'Immutable'),
('Need', 'Java Core', 'Set, Queue, Stack, and Comparator'),
('Need', 'Java Core', 'Java JUnit'),
('Need', 'Java Core', 'Java 8 — Part 1'),
('Need', 'Java Core', 'Java 8 — Part 2'),
('Need', 'Java Core', 'Java 8 — Part 3'),
('Need', 'Java Core', 'Java 9-19 Improvements'),
('Need', 'Java Core', 'Stream API Practice'),
('Need', 'Java Core', 'Java SOLID'),
('Need', 'Java Core', 'Java Dependency Injection'),
('Need', 'Java Core', 'Logger'),
('Repeat', 'SQL Basics', 'Introduction to SQL'),
('Repeat', 'SQL Basics', 'SELECT Statement'),
('Repeat', 'SQL Basics', 'WHERE Clause'),
('Repeat', 'SQL Basics', 'NULL Value, LIKE, BETWEEN, and IN Operators'),
('Repeat', 'SQL Basics', 'ORDER BY, LIMIT, DISTINCT Clauses'),
('Repeat', 'SQL Basics', 'Aliases'),
('Repeat', 'SQL Basics', 'Aggregate Functions'),
('Repeat', 'SQL Basics', 'GROUP BY Clause'),
('Repeat', 'SQL Basics', 'JOIN Clause'),
('Repeat', 'SQL Basics', 'Functions'),
('Repeat', 'SQL Basics', 'HAVING Clause'),
('Need', 'Hibernate', 'Database Intro'),
('Need', 'Hibernate', 'JDBC Intro'),
('Need', 'Hibernate', 'Hibernate Entities and Transactions'),
('Need', 'Hibernate', 'Entity Relations and Life Cycle'),
('Need', 'Hibernate', 'JPA and Cascade Types'),
('Need', 'Hibernate', 'Working With Lazy Initialization'),
('Need', 'Hibernate', 'Criteria API'),
('Need', 'Hibernate', 'Transaction Isolation Levels'),
('Need', 'Hibernate', 'N+1 Problem'),
('Need', 'Hibernate', 'Database Change Management Tools'),
('Need', 'Hibernate', 'SQL Practice'),
('Need', 'Hibernate', 'Hibernate Inheritance'),
('Need', 'Hibernate', 'Hibernate Cache Levels'),
('Need', 'Hibernate', 'Performance Improvement'),
('Optional', 'How the Web Works', 'Introduction to the Web'),
('Optional', 'How the Web Works', 'OSI Model'),
('Optional', 'How the Web Works', 'HTTP'),
('Optional', 'How the Web Works', 'API Interface'),
('Optional', 'How the Web Works', 'Encryption'),
('Optional', 'How the Web Works', 'Security in the Web'),
('Need', 'Spring Boot', 'Spring Boot Intro'),
('Need', 'Spring Boot', 'Spring Bean Lifecycle'),
('Need', 'Spring Boot', 'Spring Boot Web'),
('Need', 'Spring Boot', 'Spring Boot Web: DTO'),
('Need', 'Spring Boot', 'Spring Boot Web: Mappers in Details'),
('Need', 'Spring Boot', 'Spring Data JPA'),
('Need', 'Spring Boot', 'Criteria Query in Spring Boot'),
('Need', 'Spring Boot', 'Spring Transactional'),
('Need', 'Spring Boot', 'GlobalExceptionHandler and Data Validation'),
('Need', 'Spring Boot', 'Pagination, Sorting, Swagger'),
('Need', 'Spring Boot', 'Working With Third-Party API'),
('Need', 'Spring Boot', 'Security Basics'),
('Need', 'Spring Boot', 'Spring Boot Security'),
('Need', 'Spring Boot', 'JWT'),
('Need', 'Spring Boot', 'Spring Boot Practice'),
('Need', 'Spring Boot', 'Docker in Spring Boot'),
('Need', 'Spring Boot', 'Spring Boot Testing'),
('Need', 'Spring Boot', 'Deploy the Project to AWS'),
('Need', 'Spring Boot', 'Spring Boot AOP'),
('Need', 'Spring Boot', 'Portfolio Project'),
('Optional', 'Java Multithreading', 'Multithreading intro'),
('Optional', 'Java Multithreading', 'Threads'),
('Optional', 'Java Multithreading', 'JMM (Java Memory Model)'),
('Optional', 'Java Multithreading', 'Thread manipulation'),
('Optional', 'Java Multithreading', 'Locks'),
('Optional', 'Java Multithreading', 'Deadlock'),
('Optional', 'Java Multithreading', 'ExecutorService and Future'),
('Optional', 'Java Multithreading', 'CompletableFuture'),
('Optional', 'Java Multithreading', 'Concurrent collections'),
('Optional', 'Kotlin', 'Kotlin Intro'),
('Optional', 'Kotlin', 'Variables, Data Types, and Operators'),
('Optional', 'Kotlin', 'Nullability'),
('Optional', 'Kotlin', 'Functions'),
('Optional', 'Kotlin', 'Collections, Conditionals, and Loops'),
('Optional', 'Kotlin', 'Classes (OOP)'),
('Optional', 'Kotlin', 'Classes (Advanced)'),
('Optional', 'Kotlin', 'Extensions'),
('Optional', 'Kotlin', 'Exceptions and Files'),
('Optional', 'Kotlin', 'Standard Functions and Other Concepts'),
('Optional', 'Algorithms and Data Structure', 'Module Overview'),
('Optional', 'Algorithms and Data Structure', 'Algorithms complexity'),
('Optional', 'Algorithms and Data Structure', 'Arrays'),
('Optional', 'Algorithms and Data Structure', 'Binary search'),
('Optional', 'Algorithms and Data Structure', 'Two pointers'),
('Optional', 'Algorithms and Data Structure', 'Linked lists'),
('Optional', 'Algorithms and Data Structure', 'Stack'),
('Optional', 'Algorithms and Data Structure', 'Queue'),
('Optional', 'Algorithms and Data Structure', 'Trees'),
('Optional', 'Algorithms and Data Structure', 'Binary search tree'),
('Optional', 'Algorithms and Data Structure', 'Priority queue'),
('Optional', 'HTML + CSS Basics', 'Environment Setup'),
('Optional', 'HTML + CSS Basics', 'HTML Basics'),
('Optional', 'HTML + CSS Basics', 'CSS Basics'),
('Optional', 'HTML + CSS Basics', 'Colors and Fonts'),
('Optional', 'HTML + CSS Basics', 'Box Model Basics'),
('Optional', 'HTML + CSS Basics', 'Semantic Basics'),
('Optional', 'HTML + CSS Basics', 'Responsiveness Basics'),
('Optional', 'HTML + CSS Basics', 'CSS Selectors'),
('Optional', 'HTML + CSS Basics', 'Pseudo-Elements and Pseudo-Classes'),
('Optional', 'HTML + CSS Basics', 'Specificity'),
('Optional', 'HTML + CSS Basics', 'Links and URLs'),
('Optional', 'HTML + CSS Basics', 'Images'),
('Optional', 'HTML + CSS Basics', 'Media Queries'),
('Optional', 'HTML + CSS Basics', 'Forms'),
('Optional', 'HTML + CSS Basics', 'Position'),
('Optional', 'HTML + CSS Basics', 'Extra Topics');